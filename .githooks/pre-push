#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

error="ðŸ”´"
passed="ðŸŸ¢"

z40=0000000000000000000000000000000000000000

echo "Executing unit test..."
./gradlew testDebugUnitTest
if [ $? == 1 ]; then
  echo "$error Test failed."
  exit 1
else
  echo "$passed Test passed!"
fi

#echo "Executing lint..."
#./gradlew app-tindahangtapat:lintDevDebug
#if [ $? == 1 ]; then
#	echo "$error Lint failed."
#	exit 1
#else
#	echo "$passed Lint passed!"
#fi
